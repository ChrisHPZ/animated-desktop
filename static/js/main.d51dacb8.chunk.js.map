{"version":3,"sources":["components/Clock.js","components/Weather.js","components/Time.js","components/Moon.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","useState","clockState","setClockState","currentDate","setCurrentDate","currentMonth","setCurrentMonth","currentDay","setCurrentDay","useEffect","setInterval","date","Date","toLocaleTimeString","today","toLocaleString","weekday","month","getDate","className","font","fontSize","color","Weather","latitude","setLatitude","longitude","setLongitude","tempurature","setTempurature","wind","setWind","conditionText","setConditionText","conditionIcon","setConditionIcon","savePositionToState","position","coords","fetchWeather","a","navigator","geolocation","getCurrentPosition","axios","get","process","res","data","current","temp_f","wind_mph","condition","text","icon","console","error","style","Math","round","src","alt","TimeOfDay","hourState","setHourState","hour","getHours","Moon","moonPhase","setMoonPhase","sunRise","setSunRise","sunSet","setSunSet","moonRise","setMoonRise","moonSet","setMoonSet","fetchMoon","astronomy","astro","moon_phase","sunrise","sunset","moonrise","moonset","App","Time","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d51dacb8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Clock() {\r\n\t// Actual clock component\r\n\tconst [clockState, setClockState] = useState();\r\n\r\n\t// Current day, month and date\r\n\tconst [currentDate, setCurrentDate] = useState();\r\n\tconst [currentMonth, setCurrentMonth] = useState();\r\n\tconst [currentDay, setCurrentDay] = useState();\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetInterval(() => {\r\n\t\t\tconst date = new Date();\r\n\t\t\tsetClockState(date.toLocaleTimeString());\r\n\t\t}, 1000);\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst today = new Date();\r\n\t\tsetCurrentDate(today.toLocaleString(\"default\", { weekday: \"long\" } ));\r\n\t\tsetCurrentMonth(today.toLocaleString( \"default\", { month: \"long\" }));\r\n\t\tsetCurrentDay(today.getDate());\r\n\t}, [])\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p className=\"time\">{clockState}</p>\r\n\t\t\t<p className=\"date\">{currentDate}, {currentMonth} {currentDay}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Clock","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst font = {\r\n\tfontSize: 30,\r\n\tcolor: \"#ffffff\"\r\n}\r\n\r\nconst Weather = () =>  {\r\n\r\n\tconst [latitude, setLatitude] = useState(0);\r\n\tconst [longitude, setLongitude] = useState(0);\r\n\tconst [tempurature, setTempurature] = useState('');\r\n\tconst [wind, setWind] = useState('');\r\n\tconst [conditionText, setConditionText] = useState('');\r\n\tconst [conditionIcon, setConditionIcon] = useState('');\r\n\r\n\tconst savePositionToState = (position) => {\r\n\t\tsetLatitude(position.coords.latitude);\r\n\t\tsetLongitude(position.coords.longitude);\r\n\t}\r\n\r\n\tconst fetchWeather = async () => {\r\n\t\ttry {\r\n\t\t\tawait navigator.geolocation.getCurrentPosition(savePositionToState);\r\n\t\t\tconst res = await axios.get(\r\n\t\t\t\t`https://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=${latitude},${longitude}&aqi=no`\r\n\t\t\t);\r\n\t\t\tsetTempurature(res.data.current.temp_f);\r\n\t\t\tsetWind(res.data.current.wind_mph);\r\n\t\t\tsetConditionText(res.data.current.condition.text);\r\n\t\t\tsetConditionIcon(res.data.current.condition.icon);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchWeather();\r\n\t})\r\n\t\r\n\treturn(\r\n\t\t<div className=\"weather\">\r\n\t\t\t<div style={font}>\r\n\t\t\t\t{Math.round(tempurature)}&#176;\r\n\t\t\t</div>\r\n\t\t\t<p className=\"date small\">Wind Speed: {wind}</p>\r\n\t\t\t<p className=\"date small\">{conditionText}</p>\r\n\t\t\t<p className=\"date small\"><img src={conditionIcon} alt={conditionText} /></p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Weather;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction TimeOfDay() {\r\n\tconst [hourState, setHourState] = useState();\r\n\tuseEffect(() => {\r\n\t\tconst hour = new Date();\r\n\t\tsetHourState(hour.getHours());\r\n\t}, [])\r\n\treturn(\r\n\t\t<div className=\"time-of-day\">\r\n\t\t\t<p className=\"date small\">{hourState < 12 ? \"Good Morning\" : hourState < 18 ? \"Good Afternoon\" : \"Good Evening\"}</p>\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default TimeOfDay;","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst Moon = () => {\r\n\t\r\n\tconst [latitude, setLatitude] = useState(0);\r\n\tconst [longitude, setLongitude] = useState(0);\r\n\tconst [moonPhase, setMoonPhase] = useState('');\r\n\tconst [sunRise, setSunRise] = useState('');\r\n\tconst [sunSet, setSunSet] = useState('');\r\n\tconst [moonRise, setMoonRise] = useState('');\r\n\tconst [moonSet, setMoonSet] = useState('');\r\n\t\r\n\tconst savePositionToState = (position) => {\r\n\t\tsetLatitude(position.coords.latitude);\r\n\t\tsetLongitude(position.coords.longitude);\r\n\t}\r\n\r\n\tconst fetchMoon = async () => {\r\n\t\ttry {\r\n\t\t\tawait navigator.geolocation.getCurrentPosition(savePositionToState);\r\n\t\t\tconst res = await axios.get(\r\n\t\t\t\t`https://api.weatherapi.com/v1/astronomy.json?key=${API_KEY}&q=${latitude},${longitude}&aqi=no`\r\n\t\t\t);\r\n\t\t\tsetMoonPhase(res.data.astronomy.astro.moon_phase);\r\n\t\t\tsetSunRise(res.data.astronomy.astro.sunrise);\r\n\t\t\tsetSunSet(res.data.astronomy.astro.sunset);\r\n\t\t\tsetMoonRise(res.data.astronomy.astro.moonrise);\r\n\t\t\tsetMoonSet(res.data.astronomy.astro.moonset);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchMoon();\r\n\t})\r\n\treturn(\r\n\t\t<div className=\"moon-phase\">\r\n\t\t\t<p className=\"date small\">Moon Phase: {moonPhase}</p>\r\n\t\t\t<p className=\"date small\">Sunrise: {sunRise}</p>\r\n\t\t\t<p className=\"date small\">Sunset: {sunSet}</p>\r\n\t\t\t<p className=\"date small\">Moon Rise: {moonRise}</p>\r\n\t\t\t<p className=\"date small\">Moon Set: {moonSet}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Moon;","import Clock from './components/Clock';\nimport Weather from './components/Weather';\nimport TimeOfDay from './components/Time';\nimport Moon from './components/Moon'\nimport './App.css';\n\nfunction App() {\n  return (\n\t<>\n\t\t<div className=\"columns\">\n\t\t\t<div className=\"flex-item\">\n\t\t\t\t<Weather />\n\t\t\t\t<TimeOfDay />\n\t\t\t\t<Moon />\n\t\t\t</div>\t\t\n\t\t</div>\n\t\t<div className=\"absolute\">\n\t\t\t<Clock />\n\t\t</div>\n\t</>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}